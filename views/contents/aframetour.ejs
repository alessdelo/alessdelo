<p class="lead">A-Frame</p>
<hr class="my-4">

<% strMyVar = JSON.stringify(myVar, null, 4); %>
<%= strMyVar %>
<% var passEjs = strMyVar; %>

<script>
var getPassEjs = <%- passEjs %>;
</script>

<script type="text/javascript" src="/static/general.js"></script>

<script>


var sky = document.querySelector('#pano');

var phsph3 = document.querySelector('#phsph3');



// Component to change to a sequential color on click.
AFRAME.registerComponent('cursor-listener', {
schema: {
    
    theTarget: {type: 'string'}
  },
  
  init: function () {


    var lastIndex = -1;
    var COLORS = ['red', 'green', 'blue'];
    this.el.addEventListener('click', function (evt) {
        lastIndex = (lastIndex + 1) % COLORS.length;
      this.setAttribute('material', 'color', COLORS[lastIndex]);
      alert('#' + this.data);

      this.setAttribute('visible', 'false');
      document.querySelector('#' + 'pano').setAttribute('src', '/static/photosphere2.jpg');
    });
  }
});

// Component to change to a sequential color on click.
AFRAME.registerComponent('move-able', {
schema: {
    
    theX: {type: 'string'},
    theY: {type: 'string'},
    theZ: {type: 'string'}
  },
  
  init: function () {
    var lastIndex = -1;
    var COLORS = ['red', 'green', 'blue'];
    this.el.addEventListener('click', function (evt) {
        lastIndex = (lastIndex + 1) % COLORS.length;
      this.setAttribute('material', 'color', COLORS[lastIndex]);
      alert('#' + this.data);
      
      this.setAttribute('visible', 'false');
      document.querySelector('#' + this.data.target).setAttribute('src', '/static/photosphere2.jpg');
    });
  }
});


AFRAME.registerComponent('slid-change', {
        schema: {    
            slidVal: {type: 'int'},
            slidVal2: {type: 'string'}
          },
  
        init: function () {
            this.el.addEventListener('click', function (evt) {
            
                var theSlid = document.querySelector('#xVal');
                printObject(this.el); 
                alert(':P');
            }); 
        }
  });
  


        function slidVal() {
            this.el.addEventListener('click', 
            
                
                alert(this.data.percent);   
            ); 
        }




/*
var disland = document.querySelector('#disland');
var downtown = document.querySelector('#downtown');

downtown.addEventListener('click', function() {
  sky.setAttribute('src', 'vr-downtown.jpg');
  this.setAttribute('visible', 'false');
  disland.setAttribute('visible', 'true');
  disland.setAttribute('position', '-20 -20 200');
  disland.setAttribute('rotation', '0 180 0');
});

*/

/*
// `collide` event emitted by a component such as some collider or physics component.
phsph3.addEventListener('mouseup', function (evt) {
    sky.setAttribute('src', 'photosphere2.jpg');
    this.setAttribute('visible', 'false');
});
*/

var xValSlider = document.querySelector('#xVal');

var targetEntity = document.querySelector('#targetEntity');

  xValSlider.addEventListener('change', function(e) {
      alert("ok");
      targetEntity.setAttribute('position', 'x', "7");
      alert(this.value);
    });
    
    

</script>


  <a-scene>
  
  
      <a-sky id="pano" src="/static/photosphere1.jpg" rotation="0 -60 0" radius="5000" color="#fff"></a-sky>
      
 <a-entity camera look-controls>
  <a-entity cursor="fuse: true; fuseTimeout: 500"
            position="0 0 -1"
            geometry="primitive: ring; radiusInner: 0.02; radiusOuter: 0.03"
            material="color: black; shader: flat">
             <a-entity animation begin="click" easing="ease-in" attribute="scale" dur="150"
               fill="forwards" from="0.1 0.1 0.1" to="1 1 1"></a-entity>
  <a-entity animation begin="cursor-fusing" easing="ease-in" attribute="scale" dur="1500"
               fill="backwards" from="1 1 1" to="0.1 0.1 0.1"></a-entity>
  </a-entity>
</a-entity>

<a-entity id="box" cursor-listener="theTarget:pano" geometry="primitive: box" material="color: blue" position="1 2 5" rotation="0 45 0"></a-entity>
 
<a-entity id="targetEntity" geometry="primitive: box" material="color: yellow" position="5 2 5" rotation="0 45 0"></a-entity>


      <a-box id="phsph3" position="-1 0.5 -3" rotation="0 45 0" color="#4CC3D9"
           event-set__enter="_event: mouseenter; color: #8FF7FF"
           event-set__leave="_event: mouseleave; color: #4CC3D9">
      </a-box>
      
      <a-image id="phsph2" height="56" width="56" src="/static/icon360.png"
         position="120 -20 -200" rotation="0 -30 0" opacity="0.5" visible="true"
           event-set__enter="_event: mouseenter; opacity=1"
           event-set__leave="_event: mouseleave; opacity=0.5">
      </a-image>

      <a-text font="kelsonsans" value="Roccaraso, Italy" width="6" position="-2.5 0.25 -1.5"
              rotation="0 15 0"></a-text>
              
              <a-gui-slider 
                    slid-change="slidVal:10;slidVal:foo"
                    id="xVal"
                    width="2.5" height="0.75"
                    
                    percent="0.29"
                    margin="0 0 0.05 0"
                    position="5 0 4"
                    min="1"
                    max="10"
                  
                  
                >
                </a-gui-slider>
    </a-scene>
    
      <hr class="my-4">
  <h4>Inspired by...</h4>
  <a href="https://aframe.io/blog/charleston/" target="_blank">A-Frame Tour</a>
    <br>
   <a href="https://aframe.io/docs/0.8.0/introduction/interactions-and-controllers.html" target="_blank">A-Frame Interactions and Controllers</a>
    <br>   
     <a href=" https://www.npmjs.com/package/aframe-gui" target="_blank">A-Frame GUI</a>
    <br>   
      
   
    
    
