<p class="lead">Create markers from MongoDB</p>
<hr class="my-4">

<% strMyVar = JSON.stringify(myVar, null, 4); %>
<%= strMyVar %>
<% var passEjs = strMyVar; %>




<script>


function randomStr(m) {
	var m = m || 9; s = '', r = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	for (var i=0; i < m; i++) { s += r.charAt(Math.floor(Math.random()*r.length)); }
	return s;
}
function fillCoords(length){
	var multip = Math.pow(10,length);
	var randnum = Math.floor(Math.random() * multip);
	return randnum;
}
function randomIntFromInterval(min,max,decimals)
{
  return Number((Math.random()*(max-min)+min).toFixed(decimals));
}
// Area limits (Roma):
// - top-left: 41.9999999, 12.3999999
// - bot-right: 41.7999999, 12.6599999
var coordX = randomIntFromInterval(41.8000000,41.9999999,7);
var coordY = randomIntFromInterval(12.3999999,12.6599999,7);




$(document).ready( function() {
	$( "input[name='coordx']" ).val(coordX);
	$( "input[name='coordy']" ).val(coordY); 
	// $( "#tesrVar" ).text(mapStyle); 
	// alert(silverMapStyle); 
	
	// var silverMapStyle = loadJSON('/static/maps/styles/silver.json'); 
	// silverMapStyle = {}; 
	//jQuery.getJSON('/static/maps/styles/silver.json', function(data) { 
	
	/*	
	$.getJSON('/static/test.json', function(data) { 	
		//silverMapStyle.push(data); 
		alert(data); 
		alert('getJson');
	
	}); 	
	*/
		
//alert(silverMapStyle);
	
}); // fine document.ready

//-------------------------------------------------
// GOOGLE MAPS API
	// takes the map style passed from index via ejs	
	var mapStyle = passEjs[1];
	// mapStyle = JSON.stringify(mapStyle, null, 4);
	

    function initMap() {
       var roma = {lat: 41.9000000, lng: 12.5299999};
       var map = new google.maps.Map(document.getElementById('map'), {
         zoom: 12,
         center: roma,
	 styles: mapStyle
	
       }); // fine var map
       
       		var dataArray =  passEjs[0]; 
		
			 	
		for(var theKey in dataArray) { 
		/*
	                if(dataArray.hasOwnProperty(theKey)) {
				
	                    var theVal = dataArray[theKey];
			    
	                       if (typeof theVal.loc.coordinates !== 'undefined' || theVal.loc.coordinates.length > 0) {
			       
				       // var theX = theVal.loc.coordinates[0];
					// var theY = theVal.loc.coordinates[1]; 
					*/
					
					
					
					
					var theX = 41.9000000;
					var theY = 12.5299999;
				
					 var marker = new google.maps.Marker({ 
						 position: {lat: theX, lng: theY},						
						 map: map
					 });  
					 
					 /*										 					 					 
					 
				} // fine if 2	 
	                      
 	               } // fine if 1  
		       */
		       
		       
	            } // fine for
		   	
        
       
       
     } // fine initMap

</script>

 <script>
 
 </script>

<p class="lead">Mongo points in Maps area</p>

<hr class="my-4">

<form action="/mapmongo3" method="post" class="form-inline my-2 my-lg-0">
     <input name="name" class="form-control mr-sm-2" placeholder="Point Name" aria-label="Name">
     <input name="coordx" class="form-control mr-sm-2" aria-label="CoordX">
     <input name="coordy" class="form-control mr-sm-2" aria-label="CoordY"> 
     <button id="addItem" class="btn btn-outline-success my-2 my-sm-0" >Add</button>
</form>


<div id="testVar">TestVar...</div>

   <style>
      #map {
       height: 400px;
       width: 100%;
      }
   </style>
   <h3>My Google Maps Demo</h3>
   <div id="map"></div>
   
   <script>
  // var dataArray = <%- passEjs %>;  
 
   /*
	$(document).ready( function() {		    
		    for(var theKey in dataArray) {
			if(dataArray.hasOwnProperty(theKey)) {
			    var theVal = dataArray[theKey]; 			    
				// alert(theKey + " - " + theVal); 	
				// $("ul").append("<li>" + theKey + " - " + JSON.stringify(theVal, null, 4) + "</li>" );
				$("ul").append("<li>" + theKey + " - " + theVal.loc.coordinates[0] + " - " + theVal.loc.coordinates[1] + "</li>" );
			}
		    } // fine for
	}); // fine document.ready   
   */
   </script> 
   
<ul>
<li>MONGO RECORDS</li>
</ul>
   
   <script>
   // this file is included in the header and stored in static/maps/styles folder
   // var mapStyle = JSON.parse(silverMapStyle);
    // var mapStyle = silverMapStyle;  
    // , styles: mapStyle
    /*
     function initMap() {
       var roma = {lat: 41.9000000, lng: 12.5299999};
       var map = new google.maps.Map(document.getElementById('map'), {
         zoom: 12,
         center: roma
	
       }); // fine var map	
       */
		
		// var dataArray = <%- passEjs %>; 
		
		/*		
		for(var theKey in dataArray) {
	                if(dataArray.hasOwnProperty(theKey)) {
				
	                    var theVal = dataArray[theKey];
			    
	                       if (typeof theVal.loc.coordinates !== 'undefined' && theVal.loc.coordinates.length > 0) {
			       
				       // var theX = theVal.loc.coordinates[0];
					// var theY = theVal.loc.coordinates[1]; 
					
					*/	
					
					
					 /*
					var theX = 41.9000000;
					var theY = 12.5299999;
				
					 var marker = new google.maps.Marker({ 
						 position: {lat: theX, lng: theY},						
						 map: map
					 });  
					 */
					 
					 
					 /*	
					 
				} // fine if 2	 
	                      
 	               } // fine if 1
		       
	            } // fine for
		    */	
										
		
		 /*	
		for (i = 0; i < theContents.length; i++) {
			var theX = randomIntFromInterval(41.8000000,41.9999999,7);
			var theY = randomIntFromInterval(12.3999999,12.6599999,7);
               			
			var infoContent = '<div><p>Point ' + theContents[i] + '</p></div>';
									
			 var marker = new google.maps.Marker({
				 position: {lat: theX, lng: theY},
				 map: map
			 }); 
			 
			 attachMessage(marker, infoContent);
						 
		 } // fine for
		 */
		 
		 /*
		 function attachMessage(marker, theMsg) {
		 
		        var infowindow = new google.maps.InfoWindow({
 		         content: theMsg
		        });
					
			marker.addListener('click', function() {
		          infowindow.open(marker.get('map'), marker);
		        }); 
	
		} // fine attachMessage()
		*/
	
     //	} // fine initMap
   </script>

    <script async defer
   src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCwBHsazZiwOM_daIT60BctPGfQYWw8T38&callback=initMap">
   </script>
