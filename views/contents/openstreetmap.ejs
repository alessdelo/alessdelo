<p class="lead">Create markers from MongoDB</p>
<hr class="my-4">

<% strMyVar = JSON.stringify(myVar, null, 4); %>
<%= strMyVar %>
<% var passEjs = strMyVar; %>

<script>
var getPassEjs = <%- passEjs %>;

      var roma.lat = 41.900;
      var roma.lng = 12.529;
      
      // fromLonLat([37.41, 8.82]),

</script>

  <style>
      .map {
       height: 400px;
       width: 100%;
      }
   </style>
   
    <style>
      #marker {
        width: 20px;
        height: 20px;
        border: 1px solid #088;
        border-radius: 10px;
        background-color: #0FF;
        opacity: 0.5;
      }
      #vienna {
        text-decoration: none;
        color: white;
        font-size: 11pt;
        font-weight: bold;
        text-shadow: black 0.1em 0.1em 0.2em;
      }
      .popover-content {
        min-width: 180px;
      }
    </style>


<h2>OpenLayers Simplest Example</h2>
<div id="map" class="map"></div>
<div style="display: none;">
      <!-- Clickable label for Vienna -->
      <a class="overlay" id="roma" target="_blank" href="http://en.wikipedia.org/wiki/Roma">Roma</a>
      <div id="marker" title="Marker"></div>
      <!-- Popup -->
      <div id="popup" title="Welcome to OpenLayers"></div>
    </div>
    
 

<script>

// https://openlayers.org/en/latest/examples/overlay.html

// -------------------------------------
// MARKER IMAGES
// http://openlayers.org/en/latest/examples/icon.html?q=Marker


var vatican = [41.9029468, 12.4544835];

var iconFeature = new ol.Feature({
        geometry: new ol.geom.Point([41.9029468, 12.4544835]),
        name: 'Null Island',
        population: 4000,
        rainfall: 500
      });

      var iconStyle = new ol.style.Style({
        image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
          anchor: [0.5, 46],
          anchorXUnits: 'fraction',
          anchorYUnits: 'pixels',
          src: '/static/icon360.png'
        }))
      });

      iconFeature.setStyle(iconStyle);

      var vectorSource = new ol.source.Vector({
        features: [iconFeature]
      });

      var vectorLayer = new ol.layer.Vector({
        source: vectorSource
      });
   								

// -------------------------------------

// PLACES

var roma = ol.proj.fromLonLat([12.529999, 41.900000]);

// var vatican = ol.proj.fromLonLat([41.9029468, 12.4544835]);

// -------------------------------------

var pointLayer = new ol.layer.Tile({
                  source: new ol.source.OSM()
                });

// CREATES THE MAP WITH ITS LAYERS AND PROPERTIES
    
        var map = new ol.Map({
              target: 'map',
              layers: [pointLayer, vectorLayer],
              view: new ol.View({
                center: roma,
                zoom: 12
              })              
        }); // end var map
       
   // Roma marker
      var marker = new ol.Overlay({
        position: roma,
        positioning: 'center-center',
        element: document.getElementById('marker'),
        stopEvent: false
      });
      map.addOverlay(marker);            
               
   // Roma label
      var romaLabel = new ol.Overlay({
        position: roma,
        element: document.getElementById('roma')
      });
      map.addOverlay(romaLabel);

      // Popup showing the position the user clicked
      var popup = new ol.Overlay({
        element: document.getElementById('popup')
      });
      map.addOverlay(popup);

      map.on('click', function(evt) {
        var element = popup.getElement();
        var coordinate = evt.coordinate;
        var hdms = ol.coordinate.toStringHDMS(ol.proj.transform(
            coordinate, 'EPSG:3857', 'EPSG:4326'));

        $(element).popover('destroy');
        popup.setPosition(coordinate);
        // the keys are quoted to prevent renaming in ADVANCED mode.
        $(element).popover({
          'placement': 'top',
          'animation': false,
          'html': true,
          'content': '<p>The location you clicked was:</p><code>' + hdms + '</code>'
        });
        $(element).popover('show');
      });   
      
      // ---------------------------------- 
      //-------------------------------------
      
      </script>
      
  
<h2>OpenLayers - Multipoint Layer </h2>

  <div id="map2" class="map"></div> 
  
  <div id="array"></div>     
      
      
      <script>
      
       // -------------------------------------
// MULTIPLE MARKER IMAGES
// http://openlayers.org/en/latest/examples/icon.html?q=Marker


/*
var markerStyle = new ol.style.Style({
         		 image: new ol.style.RegularShape({
           			 fill: fill,
          			  stroke: stroke,
           			 points: 3,
          			  radius: 10,
           			 rotation: Math.PI / 4,
            			angle: 0
       			 })
			 }); 
			 
			 */
			 
var markerStyle =  new ol.style.Style({
			image: new ol.style.RegularShape({
			  fill: new ol.style.Fill({
			  color: 'red'
			  }),
			  stroke: new ol.style.Stroke({
			  color: 'black', 
			  width: 2
			  }),
			  points: 3,
			  radius: 10,
			  rotation: Math.PI / 4,
			  angle: 0
			  })
			});
			 

var dataArray = {
		 0:{ "loc": { "type": "Point", "coordinates": [ 41.8750589, 12.5795684 ] }, "_id": "5aee1e0d3586f100043d9109", "name": "Point1", "rate": 6, "time": "2018-05-05T21:11:41.148Z", "__v": 0 },
		 1:{ "loc": { "type": "Point", "coordinates": [ 41.9023871, 12.43071 ] }, "_id": "5aee1f275ec9a9000461b287", "name": "Point2", "rate": 1, "time": "2018-05-05T21:16:23.362Z", "__v": 0 },
		 2:{ "loc": { "type": "Point", "coordinates": [ 41.9693125, 12.4934085 ] }, "_id": "5af12a77d85bd60004984669", "name": "Point3", "rate": 7, "time": "2018-05-08T04:41:27.706Z", "__v": 0 },
		 3:{ "loc": { "type": "Point", "coordinates": [ 41.8097032, 12.4039898 ] }, "_id": "5af1fee86c75f00004a43fad", "name": "Point4", "rate": 5, "time": "2018-05-08T19:47:52.750Z", "__v": 0 },
		 4:{ "loc": { "type": "Point", "coordinates": [ 41.8890951, 12.4092448 ] }, "_id": "5afc9d6a802a540004dabc82", "name": "Point5", "rate": 2, "time": "2018-05-16T21:06:50.852Z", "__v": 0 }
		};
						

var multiIconFeatures = {};

var i = 0;
	 	
		for(var theKey in dataArray) { 
		
		
		
	                if(dataArray.hasOwnProperty(theKey)) {
                      
                             
				
	                    var theVal = dataArray[theKey];
			    
			    // test
			    alert(JSON.stringify(theVal));
			    
			    
			    
	                       if (typeof theVal.loc.coordinates !== 'undefined' || theVal.loc.coordinates.length > 0) {
			       
				        var theX = theVal.loc.coordinates[0];
					 var theY = theVal.loc.coordinates[1];
					 
					 
					 
					  if (typeof theVal.name !== 'undefined'){
					 
						 var theName = theVal.name;
					 
					 } else {
					  	var theName = "no name";
					 
					 }
					 
					
         
       					/*
					
					  if (typeof theVal.time !== 'undefined'){
					 
						var theTime = dateFromTimestamp(theVal.time);
					 
					 } else {
					  	var theTime = "no time";
					 
					 }
                               
                               		*/
			       
					 
					   if (typeof theVal.rate !== 'undefined'){
					 
						var myRate = theVal.rate; 
						var theLabel = JSON.stringify(theVal.rate);
					 
					 } else {
					  	var myRate = "no rate"; 
						var theLabel = "0";
					 
					 } 
					 
	       var icon = ""; 
	       var x =parseInt(theLabel);
        switch (true) {
            case (x < 1):
                icon = "grey";
                break;
            case (x < 3):
                icon = "green";
                break;
            case (x < 6):
                icon = "yellow";
                break;
		case (x < 9):
                icon = "red";
                break;		
            default:
                icon = "grey";
                break;
        }				 

      icon = "http://maps.google.com/mapfiles/ms/icons/" + icon + ".png"; 
      
      
      
      // var testString = "<p>"+ theName + " - " + theX + " - " + theY + " - " + theTime + " - " + myRate + " - " +  "</p>";
      var testString = "<p>" + theName + " - " +  theX + " - " + theY + " - " + myRate + "</p>";
      // alert(testString);
      $( "#array" ).append(testString);
      
      
      
      
     
    				//http://openlayers.org/en/latest/examples/cluster.html
      
      	            				
					/*
                              
			      multiIconFeatures[i] = new ol.Feature({
                                         geometry: new ol.geom.Point([theX, theY]),
                                          name: theName,
                                          rate: myRate
                              });
			      
                               
			       
                              var iconStyle = new ol.style.Style({
                                         image: new ol.style.Icon(({
                                          anchor: [0.5, 46],
                                          anchorXUnits: 'fraction',
                                          anchorYUnits: 'pixels',
                                          src: icon
                                          }))
                                 });
				 
				
                              
                              multiIconFeatures[i].setStyle(iconStyle); 
			      */
			      
			      
			      
			        
        			multiIconFeatures[i] = new ol.Feature(new ol.geom.Point([theX, theY])); 
				multiIconFeatures[i].setStyle(markerStyle);
				
				   // alert(multiIconFeatures[i]); 
				// alert(JSON.stringify(multiIconFeatures[i])); 
				 
														 					 					 					 
				} // fine if 2	 
				
				 
	                      
 	               } // fine if 1  		   		       
		      
		       i++;
		       alert(i);
		      
	            } // fine for
		    		   		    
		        		
	   alert(multiIconFeatures); 
	alert(JSON.stringify(multiIconFeatures)); 
	
	 
	 
	 var multiVectorSource = new ol.source.Vector({
        features: multiIconFeatures
      });
      var multiVectorLayer = new ol.layer.Vector({
        source: multiVectorSource
      }); 
      
      
      
      /* 
      var source = new ol.source.Vector({
        features: multiIconFeatures
      });

      var vectorLayer = new ol.layer.Vector({
        source: source
      });
      
      */
      
       var map2BaseLayer = new ol.layer.Tile({
                  source: new ol.source.OSM()
                });

var map2 = new ol.Map({
              target: 'map2',
	      layers: [map2BaseLayer, multiVectorLayer],             
              view: new ol.View({
                center: roma,
                zoom: 12
              })              
        }); // end var map2
	    

</script>






  
  
