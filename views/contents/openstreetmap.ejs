<p class="lead">Create markers from MongoDB</p>
<hr class="my-4">

<% strMyVar = JSON.stringify(myVar, null, 4); %>
<%= strMyVar %>
<% var passEjs = strMyVar; %>

<script>
var getPassEjs = <%- passEjs %>;

      var roma.lat = 41.900;
      var roma.lng = 12.529;
      
      // fromLonLat([37.41, 8.82]),

</script>

  <style>
      #map1 {
       height: 400px;
       width: 100%;
      }
   </style>
   
    <style>
      #marker {
        width: 20px;
        height: 20px;
        border: 1px solid #088;
        border-radius: 10px;
        background-color: #0FF;
        opacity: 0.5;
      }
      #vienna {
        text-decoration: none;
        color: white;
        font-size: 11pt;
        font-weight: bold;
        text-shadow: black 0.1em 0.1em 0.2em;
      }
      .popover-content {
        min-width: 180px;
      }
    </style>


<h2>OpenLayers Simplest Example</h2>
<div id="map" class="map"></div>
<div style="display: none;">
      <!-- Clickable label for Vienna -->
      <a class="overlay" id="roma" target="_blank" href="http://en.wikipedia.org/wiki/Roma">Roma</a>
      <div id="marker" title="Marker"></div>
      <!-- Popup -->
      <div id="popup" title="Welcome to OpenLayers"></div>
    </div>

<script>

// https://openlayers.org/en/latest/examples/overlay.html

// -------------------------------------
MARKER IMAGES
// http://openlayers.org/en/latest/examples/icon.html?q=Marker

var iconFeature = new ol.Feature({
        geometry: new ol.geom.Point([0, 0]),
        name: 'Null Island',
        population: 4000,
        rainfall: 500
      });

      var iconStyle = new ol.style.Style({
        image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
          anchor: [0.5, 46],
          anchorXUnits: 'fraction',
          anchorYUnits: 'pixels',
          src: '/static/icon360.png'
        }))
      });

      iconFeature.setStyle(iconStyle);

      var vectorSource = new ol.source.Vector({
        features: [iconFeature]
      });

      var vectorLayer = new ol.layer.Vector({
        source: vectorSource
      });

// -------------------------------------

var roma = ol.proj.fromLonLat([12.529999, 41.900000]);

var pointLayer = new ol.layer.Tile({
                  source: new ol.source.OSM()
                });

// CREATES THE MAP WITH ITS LAYERS AND PROPERTIES
    
        var map = new ol.Map({
              target: 'map',
              layers: [pointLayer, vectorLayer],
              view: new ol.View({
                center: roma,
                zoom: 12
              })              
        }); // end var map
       
   // Roma marker
      var marker = new ol.Overlay({
        position: roma,
        positioning: 'center-center',
        element: document.getElementById('marker'),
        stopEvent: false
      });
      map.addOverlay(marker);            
               
   // Roma label
      var romaLabel = new ol.Overlay({
        position: roma,
        element: document.getElementById('roma')
      });
      map.addOverlay(romaLabel);

      // Popup showing the position the user clicked
      var popup = new ol.Overlay({
        element: document.getElementById('popup')
      });
      map.addOverlay(popup);

      map.on('click', function(evt) {
        var element = popup.getElement();
        var coordinate = evt.coordinate;
        var hdms = ol.coordinate.toStringHDMS(ol.proj.transform(
            coordinate, 'EPSG:3857', 'EPSG:4326'));

        $(element).popover('destroy');
        popup.setPosition(coordinate);
        // the keys are quoted to prevent renaming in ADVANCED mode.
        $(element).popover({
          'placement': 'top',
          'animation': false,
          'html': true,
          'content': '<p>The location you clicked was:</p><code>' + hdms + '</code>'
        });
        $(element).popover('show');
      });      

</script>



  
  
